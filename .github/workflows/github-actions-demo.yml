name: CyRSoXS Build and Test
run-name: CyRSoXS Build-n-Test by ${{ github.actor }}
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Provide diagnostic data
        run: echo "Trigger ${{ github.event_name }}, running on ${{ runner.os }}, working on ${{ github.repository }} @ ${{ github.ref }}."
      - name: Clone cyrsoxs code
        uses: actions/checkout@v3
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/ghactions-local/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment-build.yml') }}
      - name: Check out NRSS code
        uses: actions/checkout@v3
        with:
          repository: usnistgov/NRSS    
          ref: main
          path: ${{ github.workspace }}/NRSS/
      - name: Setup Python and Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: "latest"
          activate-environment: cyrsoxs-build
          environment-file: environment-build.yml
          python-version: 3.9          
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Install NRSS/run dependencies
        run: |
            # $CONDA is an environment variable pointing to the root of the miniconda directory
            $CONDA/bin/conda env update --file NRSS/environment.yml
      - name: Checkout PyBind
        run: |
          git submodule update --init
      - name: Build standalone binaries
        run: |
          conda activate cyrsoxs-build
          cd ${{ github.workspace }}
          mkdir build;
          cd build;
          cmake .. -DCMAKE_BUILD_TYPE=Release;
          make
      - name: Build with Pybind
        run: |
          conda activate cyrsoxs-build
          cd ${{ github.workspace }}
          mkdir build-pybind;
          cd build-pybind;
          cmake .. -DCMAKE_BUILD_TYPE=Release -DPYBIND=Yes -USE_SUBMODULE_PYBIND=Yes;
          make
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
          ls ${{ github.workspace }}/NRSS
      
      - run: echo "üçè This job's status is ${{ job.status }}."
